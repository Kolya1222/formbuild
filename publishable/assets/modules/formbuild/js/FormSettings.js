let currentEditingField = null;
// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—è
export function editFieldSettings(id) {
    currentEditingField = id;
    const field = document.getElementById(`field-${id}`);
    
    let modalContent = `
        <div class="modal-settings-container">
            <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ -->
            <div class="settings-section">
                <h6 class="section-title"><i class="bi bi-gear me-2"></i>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h6>
                
                <div class="mb-3">
                    <label class="form-label">–¢–∏–ø –ø–æ–ª—è</label>
                    <select class="form-select select-field-type" id="fieldType-${id}" onchange="updateFieldSettingsForm(${id})">
                        <option value="text">üìù –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ</option>
                        <option value="email">‚úâÔ∏è Email</option>
                        <option value="tel">üìû –¢–µ–ª–µ—Ñ–æ–Ω</option>
                        <option value="password">üîí –ü–∞—Ä–æ–ª—å</option>
                        <option value="number">üî¢ –ß–∏—Å–ª–æ</option>
                        <option value="textarea">üìã –¢–µ–∫—Å—Ç–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å</option>
                        <option value="select">‚ñæ –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫</option>
                        <option value="checkbox">‚òëÔ∏è –ß–µ–∫–±–æ–∫—Å</option>
                        <option value="radio">üîò –†–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏</option>
                        <option value="file">üìé –§–∞–π–ª</option>
                        <option value="hidden">üëÅÔ∏è‚Äçüó®Ô∏è –°–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ</option>
                        <option value="date">üìÖ –î–∞—Ç–∞</option>
                    </select>
                </div>
                
                <div class="row g-2">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ (label)</label>
                            <input type="text" class="form-control" id="fieldLabel-${id}" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –í–∞—à–µ –∏–º—è">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">–ò–º—è –ø–æ–ª—è (name)*</label>
                            <input type="text" class="form-control" id="fieldName-${id}" 
                                placeholder="–¢–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞" required>
                            <small class="text-muted">–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ</small>
                        </div>
                    </div>
                </div>
                
                <div class="row g-2">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">ID –ø–æ–ª—è</label>
                            <input type="text" class="form-control" id="fieldId-${id}" 
                                placeholder="–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Placeholder</label>
                            <input type="text" class="form-control" id="fieldPlaceholder-${id}" 
                                placeholder="–ü–æ–¥—Å–∫–∞–∑–∫–∞ –≤–Ω—É—Ç—Ä–∏ –ø–æ–ª—è">
                        </div>
                    </div>
                </div>
                
                <div class="mb-3 form-check form-switch">
                    <input type="checkbox" class="form-check-input" id="fieldRequired-${id}">
                    <label class="form-check-label" for="fieldRequired-${id}">–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ</label>
                </div>
            </div>
            
            <!-- –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ -->
            <div class="settings-section" id="fieldSpecificSettings-${id}">
                <h6 class="section-title"><i class="bi bi-tools me-2"></i>–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</h6>
                <div class="alert alert-info py-2">
                    <small>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–ª—è —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</small>
                </div>
            </div>
            
            <!-- –í–∞–ª–∏–¥–∞—Ü–∏—è -->
            <div class="settings-section">
                <h6 class="section-title"><i class="bi bi-shield-check me-2"></i>–í–∞–ª–∏–¥–∞—Ü–∏—è</h6>
                <div class="row g-2">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">–ú–∏–Ω. –¥–ª–∏–Ω–∞</label>
                            <input type="number" class="form-control" id="fieldMinLength-${id}" 
                                placeholder="0" min="0">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">–ú–∞–∫—Å. –¥–ª–∏–Ω–∞</label>
                            <input type="number" class="form-control" id="fieldMaxLength-${id}" 
                                placeholder="255" min="1">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.getElementById('fieldSettingsModalBody').innerHTML = modalContent;
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    safeSetValue(`fieldType-${id}`, field.dataset.type);
    safeSetValue(`fieldLabel-${id}`, field.dataset.label);
    safeSetValue(`fieldName-${id}`, field.dataset.name);
    safeSetValue(`fieldId-${id}`, field.dataset.id); // –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º data-id
    safeSetChecked(`fieldRequired-${id}`, field.dataset.required === 'true');
    safeSetValue(`fieldPlaceholder-${id}`, field.dataset.placeholder);
    safeSetValue(`fieldMinLength-${id}`, field.dataset.minLength);
    safeSetValue(`fieldMaxLength-${id}`, field.dataset.maxLength);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    updateFieldSettingsForm(id);

    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
    setTimeout(() => fillSpecificFields(id, field), 50);
    
    const modal = new bootstrap.Modal(document.getElementById('fieldSettingsModal'));
    modal.show();
}
function safeSetValue(elementId, value) {
    const element = document.getElementById(elementId);
    if (element) element.value = value || '';
}

function safeSetChecked(elementId, isChecked) {
    const element = document.getElementById(elementId);
    if (element) element.checked = isChecked;
}
function fillSpecificFields(id, field) {
    switch(field.dataset.type) {
        case 'select':
        case 'radio':
            safeSetValue(`fieldOptions-${id}`, field.dataset.options);
            break;
            
        case 'checkbox':
            safeSetValue(`fieldValue-${id}`, field.dataset.value || '1');
            safeSetChecked(`fieldChecked-${id}`, field.dataset.checked === 'true');
            break;
            
        case 'file':
            safeSetValue(`fieldAccept-${id}`, field.dataset.accept);
            safeSetValue(`fieldMaxSize-${id}`, field.dataset.maxSize);
            break;
            
        case 'hidden':
            safeSetValue(`fieldValue-${id}`, field.dataset.value);
            break;
            
        case 'number':
            safeSetValue(`fieldMin-${id}`, field.dataset.min);
            safeSetValue(`fieldMax-${id}`, field.dataset.max);
            safeSetValue(`fieldStep-${id}`, field.dataset.step || '1');
            break;
            
        case 'textarea':
            safeSetValue(`fieldRows-${id}`, field.dataset.rows || '3');
            break;
    }
}
// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø–æ–ª—è
export function updateFieldSettingsForm(id) {
    const type = document.getElementById(`fieldType-${id}`).value;
    let specificSettings = '';
    
    switch(type) {
        case'text':
            document.getElementById(`fieldName-${id}`).value = `one_message${id}`;
            break;
        case 'email':
            document.getElementById(`fieldName-${id}`).value = `email${id}`;
            break;
        case'tel':
            document.getElementById(`fieldName-${id}`).value = `phone${id}`;
            break;
        case'password':
            document.getElementById(`fieldName-${id}`).value = `password${id}`;
            break;
        case 'select':
            document.getElementById(`fieldName-${id}`).value = `select${id}`;
            break;
        case 'radio':
            document.getElementById(`fieldName-${id}`).value = `radio${id}`;
            specificSettings = `
                <div class="mb-3">
                    <label class="form-label">–û–ø—Ü–∏–∏ (–∫–∞–∂–¥–∞—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)</label>
                    <textarea class="form-control" id="fieldOptions-${id}" rows="4" placeholder="–ó–Ω–∞—á–µ–Ω–∏–µ1 : –¢–µ–∫—Å—Ç1\n–ó–Ω–∞—á–µ–Ω–∏–µ2 : –¢–µ–∫—Å—Ç2"></textarea>
                    <div class="form-text">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç "–∑–Ω–∞—á–µ–Ω–∏–µ : —Ç–µ–∫—Å—Ç" –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è</div>
                </div>
            `;
            break;
            
        case 'checkbox':
            document.getElementById(`fieldName-${id}`).value = `checkbox${id}`;
            specificSettings = `
                <div class="mb-3">
                    <label class="form-label">–ó–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ</label>
                    <input type="text" class="form-control" id="fieldValue-${id}" value="1">
                </div>
                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="fieldChecked-${id}">
                    <label class="form-check-label" for="fieldChecked-${id}">–í—ã–±—Ä–∞–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</label>
                </div>
            `;
            break;
            
        case 'file':
            document.getElementById(`fieldName-${id}`).value = `file${id}`;
            specificSettings = `
                <div class="mb-3">
                    <label class="form-label">–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤</label>
                    <input type="text" class="form-control" id="fieldAccept-${id}" placeholder="jpg,png,pdf" data-accept>
                    <div class="form-text">–£–∫–∞–∂–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: jpg,png,pdf). –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –ª—é–±—ã—Ö —Ñ–∞–π–ª–æ–≤</div>
                </div>
                <div class="mb-3">
                    <label class="form-label">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä (–ú–ë)</label>
                    <input type="number" class="form-control" id="fieldMaxSize-${id}" placeholder="2" data-max-size>
                    <div class="form-text">–ë—É–¥–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ –∫–∏–ª–æ–±–∞–π—Ç—ã (1 –ú–ë = 1024 –ö–ë)</div>
                </div>
            `;
            break;
            
        case 'hidden':
            document.getElementById(`fieldName-${id}`).value = `hidden${id}`;
            specificSettings = `
                <div class="mb-3">
                    <label class="form-label">–ó–Ω–∞—á–µ–Ω–∏–µ</label>
                    <input type="text" class="form-control" id="fieldValue-${id}">
                </div>
            `;
            break;
            
        case 'number':
            document.getElementById(`fieldName-${id}`).value = `number${id}`;
            specificSettings = `
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</label>
                            <input type="number" class="form-control" id="fieldMin-${id}">
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</label>
                            <input type="number" class="form-control" id="fieldMax-${id}">
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label">–®–∞–≥</label>
                    <input type="number" class="form-control" id="fieldStep-${id}" value="1">
                </div>
            `;
            break;
            
        case 'textarea':
            document.getElementById(`fieldName-${id}`).value = `message${id}`;
            specificSettings = `
                <div class="mb-3">
                    <label class="form-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫</label>
                    <input type="number" class="form-control" id="fieldRows-${id}" value="3">
                </div>
            `;
            break;
        case 'date':
            document.getElementById(`fieldName-${id}`).value = `date${id}`;
    }
    
    document.getElementById(`fieldSpecificSettings-${id}`).innerHTML = specificSettings;
}
// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—è
export function saveFieldSettings() {
    if (currentEditingField === null) return;
    
    const id = currentEditingField;
    const field = document.getElementById(`field-${id}`);
    if (!field) return;
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    const type = document.getElementById(`fieldType-${id}`)?.value || 'text';
    const label = document.getElementById(`fieldLabel-${id}`)?.value || `–ü–æ–ª–µ ${id + 1}`;
    const name = document.getElementById(`fieldName-${id}`)?.value || `field${id}`;
    const fieldId = document.getElementById(`fieldId-${id}`)?.value || name;
    const required = document.getElementById(`fieldRequired-${id}`)?.checked || false;
    const placeholder = document.getElementById(`fieldPlaceholder-${id}`)?.value || '';
    const minLength = document.getElementById(`fieldMinLength-${id}`)?.value || '';
    const maxLength = document.getElementById(`fieldMaxLength-${id}`)?.value || '';
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ
    field.querySelector('.field-title').textContent = label;
    field.querySelector('.field-type-badge').textContent = type;
    field.querySelector('.field-name-summary').textContent = name;
    field.querySelector('.field-label-summary').textContent = label;
    
    const requiredBadge = field.querySelector('.field-required-badge');
    if (required) {
        requiredBadge.classList.remove('d-none');
        requiredBadge.classList.add('badge-required');
        requiredBadge.classList.remove('badge-optional');
    } else {
        requiredBadge.classList.add('d-none');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º data-–∞—Ç—Ä–∏–±—É—Ç—ã
    field.dataset.type = type;
    field.dataset.name = name;
    field.dataset.label = label;
    field.dataset.fieldId = fieldId;
    field.dataset.required = required;
    field.dataset.placeholder = placeholder;
    field.dataset.minLength = minLength;
    field.dataset.maxLength = maxLength;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π
    switch(type) {
        case 'select':
        case 'radio':
            field.dataset.options = document.getElementById(`fieldOptions-${id}`)?.value || '';
            break;
            
        case 'checkbox':
            field.dataset.value = document.getElementById(`fieldValue-${id}`)?.value || '';
            field.dataset.checked = document.getElementById(`fieldChecked-${id}`)?.checked || false;
            break;
            
        case 'file':
            field.dataset.accept = document.getElementById(`fieldAccept-${id}`)?.value || '';
            field.dataset.maxSize = document.getElementById(`fieldMaxSize-${id}`)?.value || '';
            break;
            
        case 'hidden':
            field.dataset.value = document.getElementById(`fieldValue-${id}`)?.value || '';
            break;
            
        case 'number':
            field.dataset.min = document.getElementById(`fieldMin-${id}`)?.value || '';
            field.dataset.max = document.getElementById(`fieldMax-${id}`)?.value || '';
            field.dataset.step = document.getElementById(`fieldStep-${id}`)?.value || '';
            break;
            
        case 'textarea':
            field.dataset.rows = document.getElementById(`fieldRows-${id}`)?.value || '';
            break;
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = bootstrap.Modal.getInstance(document.getElementById('fieldSettingsModal'));
    if (modal) modal.hide();
    
    generateMarkup();
}